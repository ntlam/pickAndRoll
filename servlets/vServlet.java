import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.tomcat.jdbc.pool.DataSource;
import org.apache.tomcat.jdbc.pool.PoolProperties;

import java.io.FileNotFoundException;
import java.io.FileInputStream;
import java.util.Properties;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;

import org.json.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.util.Iterator;

import java.lang.Integer;
import java.io.IOException;

public class vServlet extends HttpServlet 
{
	@Override
	public void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException
	{
		String team = request.getParameter("team");	
		// if(hashmap.containsKey(team))
			// team = hashmap.get(team);

		Properties props = new Properties();
		try
		{
			FileInputStream in = new FileInputStream("/Users/nathanlam/Downloads/apache-tomcat-8.0.11/webapps/pickAndRoll/WEB-INF/classes/servlet.properties");
			props.load(in);
			in.close();
		}
		catch(Exception e)
		{
			response.getWriter().print(e.getMessage());
		}

		PoolProperties p = new PoolProperties();
		p.setUrl(props.getProperty("url"));
		p.setDriverClassName("oracle.jdbc.OracleDriver");
		p.setUsername(props.getProperty("user"));
		p.setPassword(props.getProperty("pass"));

		DataSource datasource = new DataSource();
		datasource.setPoolProperties(p); 

		Connection con = null;
		Statement st = null;
		ResultSet rs = null;

		// JSONObject teamObj = new JSONObject();
		JSONArray container = new JSONArray();
		ArrayList<Object> teamArray = new ArrayList<Object>();
		int year = 2002;

		HashMap<String, HashMap<String, Integer>> tpMap = createTPMap();
		HashMap<String, Integer> tpYears = tpMap.get(team);

		try 
		{
			// response.getWriter().print("Inside try", );
	        con = datasource.getConnection();
	        // response.getWriter().print("got connection", );
	        st = con.createStatement();
	        rs = st.executeQuery("SELECT PCT2002, PCT2003, PCT2004, PCT2005, PCT2006, PCT2007, PCT2008, PCT2009, PCT2010, PCT2011, PCT2012, PCT2013, PCTO FROM STANDINGS_2014 WHERE TEAM = '" + team +"'" );
	        // response.getWriter().print("got resultset", );
	        if(rs.next())
	        {
		        if(tpYears == null)
		        {
			        for(int i = 0; i < 12; i++)
			        {
			        	String yearStr = Integer.toString(year + i);
			        	// teamObj.put("year", yearStr);
			        	// teamObj.put("pct", rs.getString("PCT" + yearStr));
			        	// container.put(teamObj);
			        	// teamObj = new JSONObject();
			        	if(rs.getString("PCT" + yearStr) != null)
			        	{
			        	teamArray.add(year + i);
			        	teamArray.add(rs.getFloat("PCT" + yearStr));
			        	teamArray.add(0);
			        	container.put(teamArray);
			        	teamArray = new ArrayList<Object>();
			        }
			        }
			        // response.getWriter().print("For loop successful", );
			        // teamObj.put("year", "2014", );
			        // teamObj.put("pct", rs.getString("PCTO"));
			        // container.put(teamObj);
			        if(rs.getString("PCTO") != null)
			        {
			        teamArray.add(2014);
		        	teamArray.add(rs.getFloat("PCTO"));
		        	teamArray.add(0);
		        	container.put(teamArray);
		        }
		        }
		        else
		        {
		        	for(int i = 0; i < 12; i++)
			        {
			        	String yearStr = Integer.toString(year + i);
			        	// teamObj.put("year", yearStr);
			        	// teamObj.put("pct", rs.getString("PCT" + yearStr));
			        	// container.put(teamObj);
			        	// teamObj = new JSONObject();
			        	if(rs.getString("PCT" + yearStr) != null)
			        	{
				        	teamArray.add(year + i);
				        	teamArray.add(rs.getFloat("PCT" + yearStr));
				        	if(tpYears.containsKey(yearStr))
				        	{
				        		teamArray.add(tpYears.get(yearStr));
				        	}
				        	else
				        		teamArray.add(0);
				        	container.put(teamArray);
				        	teamArray = new ArrayList<Object>();
				        }
			        }
			        // response.getWriter().print("For loop successful", );
			        // teamObj.put("year", "2014", );
			        // teamObj.put("pct", rs.getString("PCTO"));
			        // container.put(teamObj);
			        if(rs.getString("PCTO") != null)
			        {
				        teamArray.add(2014);
			        	teamArray.add(rs.getFloat("PCTO"));
			        	if(tpYears.containsKey("2014"))
			        	{
			        		teamArray.add(tpYears.get("2014"));
			        	}
			        	container.put(teamArray);
			        }
		        }
	        	response.setContentType("application/json"); 
		        response.getWriter().print(container.toString());
		        // response.getWriter().print("last statement of try", );
		    }
		    else
		    {
		    	response.getWriter().print("Team does not exist!");
		    }
	        rs.close();
		    con.close();
	    }
	    catch(Exception e)
	    {
	    	response.getWriter().print("An issue occurred when trying to process the request.");
	    }
	   
	}

	@Override
    public void doPost (HttpServletRequest request, HttpServletResponse response)
    {
    	try
    	{
	    	doGet(request, response);
	    }
	    catch(Exception e)
	    {
	    }  
    }

    /*
    /*		This function creates a mapping of teams to years in which they participated
    /*		in the March Madness tournament. 
    */
    protected HashMap<String, HashMap<String, Integer>> createTPMap ()
    {
    	HashMap<String, HashMap<String, Integer>> tpMap = new HashMap<String, HashMap<String, Integer>>();
		HashMap<String, Integer> yearsMap = new HashMap<String, Integer>();		//maps year to how far team got in conference for year
		yearsMap.put("2002", 1);
		yearsMap.put("2003", 2);	
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 2);	
		yearsMap.put("2006", 7);	
		yearsMap.put("2007", 7);	
		yearsMap.put("2010", 1);	
		yearsMap.put("2011", 4);	
		yearsMap.put("2012", 4);	
		yearsMap.put("2013", 4);	
		yearsMap.put("2014", 5);	
		tpMap.put("Florida", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Albany", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2007", 2);		
		yearsMap.put("2009", 1);
		yearsMap.put("2011", 5);		
		yearsMap.put("2012", 2);		
		yearsMap.put("2013", 2);		
		yearsMap.put("2014", 1);
		tpMap.put("VCU", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 1);
		yearsMap.put("2014", 2);		
		tpMap.put("Stephen F. Austin", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 3);		
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 6);		
		yearsMap.put("2007", 5);		
		yearsMap.put("2008", 5);		
		yearsMap.put("2009", 2);		
		yearsMap.put("2011", 2);		
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 3);		
		tpMap.put("UCLA", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 2);		
		yearsMap.put("2014", 1);
		tpMap.put("Tulsa", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2006", 2);		
		yearsMap.put("2007", 6);		
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 3);		
		yearsMap.put("2011", 3);		
		yearsMap.put("2012", 5);		
		yearsMap.put("2013", 4);		
		yearsMap.put("2014", 1);
		tpMap.put("Ohio State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 1);
		yearsMap.put("2009", 2);	
		yearsMap.put("2014", 4);	
		tpMap.put("Dayton", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 7);		
		yearsMap.put("2004", 3);		
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 1);
		yearsMap.put("2009", 3);		
		yearsMap.put("2010", 3);		
		yearsMap.put("2011", 2);		
		yearsMap.put("2012", 4);		
		yearsMap.put("2013", 5);		
		yearsMap.put("2014", 2);		
		tpMap.put("Syracuse", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Western Michigan", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2010", 2);		
		yearsMap.put("2012", 2);		
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 1);
		tpMap.put("New Mexico", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 3);		
		yearsMap.put("2004", 2);		
		yearsMap.put("2005", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2008", 3);		
		yearsMap.put("2014", 3);		
		tpMap.put("Stanford", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 5);		
		yearsMap.put("2003", 6);		
		yearsMap.put("2004", 4);		
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 4);		
		yearsMap.put("2008", 7);		
		yearsMap.put("2009", 3);		
		yearsMap.put("2010", 2);		
		yearsMap.put("2011", 4);		
		yearsMap.put("2012", 6);		
		yearsMap.put("2013", 3);		
		yearsMap.put("2014", 2);		
		tpMap.put("Kansas", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Eastern Kentucky", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2007", 2);		
		yearsMap.put("2012", 1);
		yearsMap.put("2014", 3);		
		tpMap.put("Virginia", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2014", 1);
		tpMap.put("Coastal Carolina", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 2);		
		yearsMap.put("2006", 4);		
		yearsMap.put("2007", 4);		
		yearsMap.put("2008", 6);		
		yearsMap.put("2009", 3);		
		yearsMap.put("2011", 1);
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 2);		
		yearsMap.put("2014", 2);		
		tpMap.put("Memphis", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 2);		
		yearsMap.put("2007", 1);
		yearsMap.put("2014", 1);
		tpMap.put("George Washington", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 2);		
		yearsMap.put("2005", 2);		
		yearsMap.put("2011", 2);		
		yearsMap.put("2012", 3);		
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Cincinnati", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 2);		
		yearsMap.put("2014", 2);		
		tpMap.put("Harvard", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2003", 4);		
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 5);		
		yearsMap.put("2007", 2);		
		yearsMap.put("2008", 3);		
		yearsMap.put("2009", 6);		
		yearsMap.put("2010", 5);		
		yearsMap.put("2011", 1);
		yearsMap.put("2012", 3);		
		yearsMap.put("2013", 3);		
		yearsMap.put("2014", 4);		
		tpMap.put("Michigan State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2014", 1);
		tpMap.put("Delaware", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 2);			
		yearsMap.put("2005", 7);			
		yearsMap.put("2006", 2);			
		yearsMap.put("2007", 4);			
		yearsMap.put("2008", 5);			
		yearsMap.put("2009", 7);			
		yearsMap.put("2011", 4);			
		yearsMap.put("2012", 4);			
		yearsMap.put("2013", 2);			
		yearsMap.put("2014", 2);			
		tpMap.put("North Carolina", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Providence", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 2);		
		yearsMap.put("2012", 2);		
		yearsMap.put("2013", 2);		
		yearsMap.put("2014", 3);		
		tpMap.put("Iowa State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 2);		
		yearsMap.put("2005", 3);		
		yearsMap.put("2006", 2);		
		yearsMap.put("2012", 3);		
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 1);
		tpMap.put("North Carolina State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 4);		
		yearsMap.put("2003", 2);		
		yearsMap.put("2004", 7);		
		yearsMap.put("2005", 2);		
		yearsMap.put("2006", 4);		
		yearsMap.put("2008", 1);
		yearsMap.put("2009", 5);		
		yearsMap.put("2011", 7);		
		yearsMap.put("2012", 1);
		yearsMap.put("2014", 7);		
		tpMap.put("Connecticut", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 4);		
		yearsMap.put("2008", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Saint Joseph's", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 3);		
		yearsMap.put("2007", 4);		
		yearsMap.put("2008", 3);		
		yearsMap.put("2009", 5);		
		yearsMap.put("2010", 2);		
		yearsMap.put("2011", 1);
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 2);			
		tpMap.put("Villanova", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2005", 3);		
		yearsMap.put("2006", 2);		
		yearsMap.put("2014", 1);
		tpMap.put("Milwaukee", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Mount St. Mary's", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 2);		
		yearsMap.put("2004", 4);		
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 2);		
		yearsMap.put("2008", 4);		
		yearsMap.put("2009", 3);		
		yearsMap.put("2010", 3);		
		yearsMap.put("2011", 1);
		yearsMap.put("2012", 3);		
		yearsMap.put("2014", 1);
		tpMap.put("Xavier", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2014", 1);
		tpMap.put("Cal Poly", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2014", 4);		
		tpMap.put("Texas Southern", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Iowa", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 2);		
		yearsMap.put("2007", 3);		
		yearsMap.put("2008", 3);		
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 4);		
		yearsMap.put("2011", 1);
		yearsMap.put("2014", 3);		
		tpMap.put("Tennessee", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 3);		
		yearsMap.put("2003", 4);		
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 4);		
		yearsMap.put("2006", 2);		
		yearsMap.put("2007", 1);
		yearsMap.put("2008", 1);
		yearsMap.put("2009", 3);		
		yearsMap.put("2011", 4);		
		yearsMap.put("2013", 3);		
		yearsMap.put("2014", 4);		
		tpMap.put("Arizona", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Weber State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2003", 2);		
		yearsMap.put("2004", 2);		
		yearsMap.put("2005", 2);		
		yearsMap.put("2006", 3);		
		yearsMap.put("2007", 1);
		yearsMap.put("2008", 1);
		yearsMap.put("2009", 3);		
		yearsMap.put("2010", 2);		
		yearsMap.put("2011", 2);		
		yearsMap.put("2012", 2);		
		yearsMap.put("2013", 2);		
		yearsMap.put("2014", 2);		
		tpMap.put("Gonzaga", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2003", 2);		
		yearsMap.put("2004", 5);		
		yearsMap.put("2005", 3);		
		yearsMap.put("2009", 2);		
		yearsMap.put("2010", 1);
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Oklahoma State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 5);		
		yearsMap.put("2003", 4);		
		yearsMap.put("2005", 2);		
		yearsMap.put("2006", 1);
		yearsMap.put("2008", 2);		
		yearsMap.put("2009", 4);		
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Oklahoma", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 1);
		yearsMap.put("2014", 2);		
		tpMap.put("North Dakota State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2006", 1);
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 3);		
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 2);		
		yearsMap.put("2014", 3);		
		tpMap.put("San Diego State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2007", 1);
		yearsMap.put("2010", 1);
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 1);
		tpMap.put("New Mexico State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		yearsMap.put("2010", 4);		
		yearsMap.put("2012", 4);		
		yearsMap.put("2014", 3);		
		tpMap.put("Baylor", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2014", 1);
		tpMap.put("Nebraska", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 1);
		yearsMap.put("2005", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2012", 2);		
		yearsMap.put("2013", 2);		
		yearsMap.put("2014", 2);		
		tpMap.put("Creighton", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Louisiana", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 4);		
		yearsMap.put("2003", 1);
		yearsMap.put("2007", 4);		
		yearsMap.put("2008", 1);
		yearsMap.put("2013", 3);		
		yearsMap.put("2014", 2);		
		tpMap.put("Oregon", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2008", 1);
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 2);		
		yearsMap.put("2011", 3);		
		yearsMap.put("2012", 1);
		yearsMap.put("2014", 1);
		tpMap.put("BYU", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 3);		
		yearsMap.put("2004", 2);		
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 4);		
		yearsMap.put("2007", 2);		
		yearsMap.put("2008", 3);		
		yearsMap.put("2009", 2);		
		yearsMap.put("2010", 2);		
		yearsMap.put("2011", 3);		
		yearsMap.put("2012", 3);		
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 5);		
		tpMap.put("Wisconsin", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		yearsMap.put("2009", 1);
		yearsMap.put("2014", 1);
		tpMap.put("American University", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 3);		
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 5);		
		yearsMap.put("2014", 2);		
		tpMap.put("Wichita State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 3);		
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 2);		
		yearsMap.put("2005", 4);		
		yearsMap.put("2006", 2);		
		yearsMap.put("2007", 2);		
		yearsMap.put("2008", 1);
		yearsMap.put("2010", 4);		
		yearsMap.put("2011", 5);		
		yearsMap.put("2012", 7);		
		yearsMap.put("2014", 6);		
		tpMap.put("Kentucky", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 2);		
		yearsMap.put("2010", 4);		
		yearsMap.put("2011", 2);		
		yearsMap.put("2012", 2);		
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Kansas State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2012", 2);		
		yearsMap.put("2013", 2);		
		yearsMap.put("2014", 2);		
		tpMap.put("Saint Louis", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 2);			
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 5);			
		yearsMap.put("2007", 2);			
		yearsMap.put("2008", 4);			
		yearsMap.put("2009", 4);			
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 1);
		yearsMap.put("2012", 5);			
		yearsMap.put("2013", 7);			
		yearsMap.put("2014", 3);			
		tpMap.put("Louisville", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 2);		
		yearsMap.put("2014", 1);
		tpMap.put("Manhattan", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2014", 1);
		tpMap.put("Massachusetts", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 3);			
		yearsMap.put("2003", 3);			
		yearsMap.put("2004", 5);			
		yearsMap.put("2005", 3);			
		yearsMap.put("2006", 3);			
		yearsMap.put("2007", 1);
		yearsMap.put("2008", 2);			
		yearsMap.put("2009", 3);			
		yearsMap.put("2010", 7);			
		yearsMap.put("2011", 3);			
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 4);			
		yearsMap.put("2014", 1);
		tpMap.put("Duke", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2014", 2);		
		tpMap.put("Mercer", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 3);		
		yearsMap.put("2003", 5);		
		yearsMap.put("2004", 3);		
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 2);		
		yearsMap.put("2008", 4);		
		yearsMap.put("2009", 2);		
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 2);		
		yearsMap.put("2012", 1);
		yearsMap.put("2014", 2);			
		tpMap.put("Texas", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 2);		
		yearsMap.put("2009", 2);		
		yearsMap.put("2014", 1);
		tpMap.put("Arizona State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 2);		
		yearsMap.put("2011", 2);		
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 6);		
		yearsMap.put("2014", 4);		
		tpMap.put("Michigan", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 1);
		yearsMap.put("2014", 1);
		tpMap.put("Wofford", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2011", 1);
		tpMap.put("UTSA", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 5);		
		yearsMap.put("2008", 1);
		yearsMap.put("2011", 2);		
		tpMap.put("George Mason", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 4);		
		yearsMap.put("2006", 3);		
		yearsMap.put("2008", 3);		
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 5);		
		yearsMap.put("2011", 2);		
		yearsMap.put("2012", 1);
		tpMap.put("West Virginia", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 1);
		tpMap.put("Clemson", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2011", 1);
		tpMap.put("Princeton", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2003", 5);		
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2008", 2);		
		yearsMap.put("2009", 2);		
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 3);		
		yearsMap.put("2012", 3);		
		yearsMap.put("2013", 4);		
		tpMap.put("Marquette", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2011", 1);
		tpMap.put("Indiana State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 3);		
		yearsMap.put("2006", 3);		
		yearsMap.put("2009", 2);		
		yearsMap.put("2010", 3);		
		yearsMap.put("2011", 2);		
		tpMap.put("Washington", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2008", 1);
		yearsMap.put("2011", 1);
		tpMap.put("Georgia", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2011", 1);
		yearsMap.put("2012", 1);
		tpMap.put("LIU Brooklyn", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2011", 1);
		tpMap.put("Hampton", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 1);
		tpMap.put("Oakland", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 4);		
		yearsMap.put("2003", 2);		
		yearsMap.put("2009", 4);		
		yearsMap.put("2010", 2);		
		yearsMap.put("2011", 1);
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Missouri", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 2);		
		yearsMap.put("2006", 2);		
		yearsMap.put("2011", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Bucknell", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 2);		
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 2);		
		tpMap.put("Temple", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2011", 1);
		tpMap.put("Penn State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2011", 1);
		tpMap.put("Northern Colorado", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2011", 1);
		tpMap.put("Boston University", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2007", 3);		
		yearsMap.put("2008", 2);		
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 1);
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 1);
		tpMap.put("UNLV", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 3);		
		yearsMap.put("2003", 2);		
		yearsMap.put("2004", 3);		
		yearsMap.put("2005", 6);		
		yearsMap.put("2006", 2);		
		yearsMap.put("2007", 1);
		yearsMap.put("2009", 1);
		yearsMap.put("2011", 2);		
		yearsMap.put("2013", 2);		
		tpMap.put("Illinois", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 3);		
		yearsMap.put("2007", 3);		
		yearsMap.put("2008", 1);
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 1);
		yearsMap.put("2012", 2);		
		tpMap.put("Vanderbilt", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 3);		
		tpMap.put("Richmond", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 1);
		yearsMap.put("2011", 2);		
		tpMap.put("Morehead State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 3);		
		yearsMap.put("2007", 5);		
		yearsMap.put("2008", 2);		
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 1);
		yearsMap.put("2012", 2);		
		yearsMap.put("2013", 1);
		tpMap.put("Georgetown", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 2);		
		yearsMap.put("2007", 2);		
		yearsMap.put("2008", 2);		
		yearsMap.put("2009", 3);		
		yearsMap.put("2010", 3);		
		yearsMap.put("2011", 2);		
		yearsMap.put("2012", 2);		
		tpMap.put("Purdue", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2011", 1);
		tpMap.put("Saint Peter's", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 2);		
		yearsMap.put("2007", 3);		
		yearsMap.put("2008", 2);		
		yearsMap.put("2009", 2);		
		yearsMap.put("2010", 2);		
		yearsMap.put("2011", 1);
		tpMap.put("Texas A&M", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 3);		
		yearsMap.put("2012", 2);		
		tpMap.put("Florida State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 3);		
		yearsMap.put("2007", 1);
		yearsMap.put("2008", 2);		
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 2);		
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Notre Dame", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 1);
		yearsMap.put("2011", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Akron", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 3);		
		yearsMap.put("2003", 3);		
		yearsMap.put("2004", 3);		
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 2);		
		yearsMap.put("2007", 3);		
		yearsMap.put("2008", 2);		
		yearsMap.put("2009", 4);		
		yearsMap.put("2010", 2);		
		yearsMap.put("2011", 2);		
		yearsMap.put("2013", 1);
		yearsMap.put("2014", 2);		
		tpMap.put("Pittsburgh", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2011", 1);
		yearsMap.put("2012", 1);
		tpMap.put("UNC Asheville", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 3);		
		yearsMap.put("2007", 3);		
		yearsMap.put("2008", 2);		
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 6);		
		yearsMap.put("2011", 6);		
		yearsMap.put("2013", 2);		
		tpMap.put("Butler", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2010", 2);		
		yearsMap.put("2011", 1);
		tpMap.put("Old Dominion", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 1);
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 1);
		tpMap.put("Utah State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2008", 1);
		yearsMap.put("2011", 1);
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Belmont", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2011", 1);
		tpMap.put("St. John's", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2010", 1);
		yearsMap.put("2011", 1);
		tpMap.put("UC Santa Barbara", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2010", 1);
		yearsMap.put("2012", 2);		
		tpMap.put("Lehigh", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 1);
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 3);		
		tpMap.put("UNI", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 7);		
		yearsMap.put("2003", 3);		
		yearsMap.put("2004", 2);		
		yearsMap.put("2007", 2);		
		yearsMap.put("2009", 2);		
		yearsMap.put("2010", 2);		
		tpMap.put("Maryland", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2010", 1);
		tpMap.put("Houston", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2010", 2);		
		yearsMap.put("2012", 3);		
		tpMap.put("Ohio", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 7);		
		yearsMap.put("2005", 2);		
		yearsMap.put("2007", 1);
		yearsMap.put("2010", 2);		
		tpMap.put("Georgia Tech", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 2);		
		yearsMap.put("2010", 1);
		yearsMap.put("2012", 1);
		tpMap.put("Vermont", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 1);
		yearsMap.put("2010", 1);
		tpMap.put("UTEP", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2004", 1);
		yearsMap.put("2006", 1);
		yearsMap.put("2010", 2);		
		yearsMap.put("2012", 2);		
		tpMap.put("Murray State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 1);
		yearsMap.put("2013", 2);		
		tpMap.put("Minnesota", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2007", 1);
		yearsMap.put("2010", 1);
		tpMap.put("North Texas", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 2);		
		yearsMap.put("2004", 3);		
		yearsMap.put("2005", 2);		
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 2);		
		tpMap.put("Wake Forest", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 3);		
		tpMap.put("Cornell", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 2);		
		yearsMap.put("2010", 1);
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Montana", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 1);
		tpMap.put("Morgan State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2010", 1);
		tpMap.put("UAPB", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 2);		
		yearsMap.put("2006", 1);
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 2);		
		yearsMap.put("2013", 2);		
		tpMap.put("California", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2008", 2);		
		yearsMap.put("2009", 2);		
		yearsMap.put("2010", 1);
		tpMap.put("Siena", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2010", 1);
		tpMap.put("Sam Houston State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2008", 1);
		yearsMap.put("2010", 3);		
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Saint Mary's", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 1);
		tpMap.put("Robert Morris", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2003", 4);		
		yearsMap.put("2008", 3);		
		yearsMap.put("2009", 2);		
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Western Kentucky", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 6);		
		yearsMap.put("2003", 2);		
		yearsMap.put("2006", 2);		
		yearsMap.put("2007", 2);		
		yearsMap.put("2008", 1);
		yearsMap.put("2012", 3);		
		yearsMap.put("2013", 3);		
		tpMap.put("Indiana", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2012", 2);		
		yearsMap.put("2013", 1);
		tpMap.put("Colorado", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 1);
		tpMap.put("South Dakota State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2007", 1);
		yearsMap.put("2012", 1);
		tpMap.put("Long Beach State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2008", 4);		
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Davidson", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2012", 1);
		yearsMap.put("2013", 2);		
		tpMap.put("Colorado State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2012", 2);		
		tpMap.put("Norfolk State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2012", 1);
		tpMap.put("Southern Miss", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2012", 1);
		tpMap.put("St. Bonaventure", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2012", 1);
		tpMap.put("Loyola Maryland", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 4);		
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 2);		
		yearsMap.put("2012", 1);
		tpMap.put("Alabama", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2012", 2);		
		tpMap.put("South Florida", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2012", 1);
		tpMap.put("Detroit", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 2);		
		yearsMap.put("2013", 1);
		tpMap.put("Northwestern State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2013", 3);		
		tpMap.put("FGCU", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2013", 2);		
		tpMap.put("Mississippi", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		tpMap.put("Boise State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2013", 3);		
		tpMap.put("La Salle", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Iona", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Southern University", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2008", 2);		
		yearsMap.put("2013", 3);		
		tpMap.put("Miami (FL)", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 2);		
		yearsMap.put("2005", 2);		
		yearsMap.put("2006", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Pacific", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2013", 1);
		tpMap.put("James Madison", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2004", 1);
		yearsMap.put("2013", 1);
		tpMap.put("Valparaiso", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		tpMap.put("Liberty", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2013", 1);
		tpMap.put("North Carolina A&T", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2003", 2);		
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 3);		
		yearsMap.put("2009", 1);
		tpMap.put("Utah", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 2);		
		tpMap.put("Cleveland State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2004", 2);		
		yearsMap.put("2005", 2);		
		yearsMap.put("2006", 3);		
		yearsMap.put("2007", 2);		
		yearsMap.put("2009", 1);
		tpMap.put("Boston College", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2007", 3);		
		yearsMap.put("2008", 1);
		yearsMap.put("2009", 2);		
		tpMap.put("USC", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2009", 1);
		tpMap.put("Chattanooga", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 2);		
		yearsMap.put("2005", 2);		
		yearsMap.put("2008", 2);		
		yearsMap.put("2009", 1);
		tpMap.put("Mississippi State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 1);
		tpMap.put("Cal State Northridge", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 1);
		yearsMap.put("2009", 1);
		yearsMap.put("2010", 1);
		tpMap.put("East Tennessee State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		yearsMap.put("2009", 1);
		tpMap.put("Portland State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 1);
		tpMap.put("Binghamton", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2009", 1);
		tpMap.put("Radford", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 5);		
		yearsMap.put("2009", 2);		
		tpMap.put("LSU", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2008", 2);		
		tpMap.put("Arkansas", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2007", 2);		
		yearsMap.put("2008", 3);		
		tpMap.put("Washington State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 2);		
		yearsMap.put("2008", 1);
		tpMap.put("Winthrop", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 1);
		yearsMap.put("2008", 1);
		tpMap.put("South Alabama", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 4);		
		yearsMap.put("2006", 1);
		yearsMap.put("2008", 1);
		tpMap.put("Kent State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		tpMap.put("Cal State Fullerton", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		tpMap.put("UMBC", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		tpMap.put("UT Arlington", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 1);
		yearsMap.put("2008", 1);
		tpMap.put("Oral Roberts", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2008", 1);
		tpMap.put("Austin Peay", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		tpMap.put("Mississippi Valley State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2008", 1);
		tpMap.put("Drake", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		yearsMap.put("2008", 2);		
		tpMap.put("San Diego", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2007", 1);
		tpMap.put("Miami (OH)", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2007", 1);
		tpMap.put("Texas A&M-Corpus Christi", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		yearsMap.put("2007", 1);
		tpMap.put("Niagara", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2007", 2);		
		tpMap.put("Virginia Tech", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 3);		
		yearsMap.put("2003", 1);
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 2);		
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 3);		
		tpMap.put("Southern Illinois", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2003", 1);
		yearsMap.put("2007", 1);
		tpMap.put("Holy Cross", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2007", 1);
		tpMap.put("Wright State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2004", 2);		
		yearsMap.put("2005", 3);		
		yearsMap.put("2007", 1);
		tpMap.put("Texas Tech", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2007", 1);
		tpMap.put("Central Connecticut State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2003", 1);
		yearsMap.put("2005", 1);
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 1);
		tpMap.put("Penn", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 3);		
		yearsMap.put("2005", 2);		
		yearsMap.put("2006", 1);
		yearsMap.put("2007", 2);		
		tpMap.put("Nevada", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		yearsMap.put("2003", 1);
		yearsMap.put("2006", 1);
		tpMap.put("UNCW", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2006", 3);		
		tpMap.put("Bradley", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 3);		
		yearsMap.put("2005", 2);		
		yearsMap.put("2006", 1);
		tpMap.put("UAB", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2006", 1);
		tpMap.put("Air Force", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 2);		
		yearsMap.put("2006", 1);
		tpMap.put("Seton Hall", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2006", 1);
		tpMap.put("Monmouth", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2007", 1);
		tpMap.put("Jackson State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		tpMap.put("Fairleigh Dickenson", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		tpMap.put("Southeastern Louisiana", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 1);
		tpMap.put("Charlotte", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		yearsMap.put("2005", 1);
		tpMap.put("UCF", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2005", 1);
		tpMap.put("Delaware State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		tpMap.put("Florida A&M", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		yearsMap.put("2004", 1);
		tpMap.put("UIC", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		tpMap.put("South Carolina", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		tpMap.put("Eastern Washington", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 1);
		tpMap.put("Alabama State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2004", 2);		
		tpMap.put("DePaul", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		tpMap.put("IUPUI", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		tpMap.put("Wagner", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 2);		
		tpMap.put("Central Michigan", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		tpMap.put("Troy", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 1);
		tpMap.put("South Carolina State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2003", 3);		
		tpMap.put("Auburn", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		tpMap.put("Florida Atlantic", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 2);		
		tpMap.put("Wyoming", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		tpMap.put("Hawaii", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		tpMap.put("McNeese State", yearsMap);
		yearsMap = new HashMap<String, Integer>();
		yearsMap.put("2002", 1);
		tpMap.put("Pepperdine", yearsMap);
		return tpMap;
    }
}